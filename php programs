1. Show the output for the following snippet.
<? php
$capital=67;
print(“Variable capital is $capital”);
print(“Variable CaPiTaL is $CaPiTaL”);
?> 
Output:
Variable capital is 67
Variable capital is

2. Create a PHP program to display the division table using for-loop.
1 2 3
1 1 0.5 0.33
2 2 1 0.66
3 3 1.5 1
Answer:
<?php
echo "  1 2 3\n";
for ($i = 1; $i <= 3; $i++) {
    echo $i . " ";
    for ($j = 1; $j <= 3; $j++) {
        $result = $i / $j;
        echo round($result, 2) . " ";
    }
    echo "\n";
}
?>

4.Predict the output of the following snippet:
$animal = “antelope”; $animal_heads = 1; $animal_legs = 4;
echo“The $animal has $animal_heads head(s).”;
echo“The $animal has $animal_legs leg(s).”;

 Output:The antelope has 1 head(s).The antelope has 4 leg(s).

5. You are building a website where users can calculate the total cost of their purchases.
Write a PHP program that takes the price and quantity of three items from the user and
calculates the subtotal, tax (10% of the subtotal),and the total cost (subtotal + tax).
Display the results to the user.

Code:
<?php
$price1 = 100;
$qty1   = 2;

$price2 = 50;
$qty2   = 3;

$price3 = 20;
$qty3   = 5;

$subtotal = ($price1 * $qty1) + ($price2 * $qty2) + ($price3 * $qty3);
$tax = $subtotal * 0.10;
$total = $subtotal + $tax;

Output:
Subtotal: Rs. 450
Tax (10%): Rs. 45
Total: Rs. 495

7.Create a form which takes the name of the user as input and prints a greeting in the format
given below and if the user submits the form with the name field blank, it prints an
appropriate error message.

Hello, Welcome to Everyone!
Have a nice day!!

Code:
<?php
echo "Enter your name: ";
$name = trim(fgets(STDIN));

if (empty($name)) {
    echo "Please enter your name.\n";
} else {
    echo "Hello $name, Welcome to Everyone!\n";
    echo "Have a nice day!!\n";
}
?>

Output:
Enter your name: janani
Hello janani, Welcome to Everyone!
Have a nice day!!


8. A customer visits a shop to buy a soft drink; he has two options:
Drink A cost is Rs.25 and the size of the bottle is 11.
Drink B cost is Rs.23 and its size of the bottle is 9.
Which drink should he choose to save money? Solve this problem using function deal ( ).

Code:
<?php
function deal() {
    
    $costA = 25;
    $sizeA = 11;
    $valueA = $costA / $sizeA;  

    $costB = 23;
    $sizeB = 9;
    $valueB = $costB / $sizeB;  

    if ($valueA < $valueB) {
        echo "Choose Drink A to save money.\n";
    } elseif ($valueB < $valueA) {
        echo "Choose Drink B to save money.\n";
    } else {
        echo "Both drinks offer the same value.\n";
    }
}

deal();
?>

Output:
Choose Drink A to save money.

9. Predict the output of the following snippet:
$this = “this”; $that = “that”; $the_other = 2.2000000000;
print(“$this,$not_set,$that+$the_other”);

Output:this,,that+2.2

10. Develop a program to check student grades based on marks using a loop.

Code:
<?php
$number_of_students = 3;

for ($i = 1; $i <= $number_of_students; $i++) {
    echo "Enter marks for student $i (0-100): ";
    $marks = trim(fgets(STDIN));

    if (!is_numeric($marks) || $marks < 0 || $marks > 100) {
        echo "Invalid marks entered. Please enter a number between 0 and 100.\n";
        continue; 
    }

    if ($marks >= 90) {
        $grade = "A";
    } elseif ($marks >= 80) {
        $grade = "B";
    } elseif ($marks >= 70) {
        $grade = "C";
    } elseif ($marks >= 60) {
        $grade = "D";
    } else {
        $grade = "F";
    }

    echo "Student $i Grade: $grade\n";
}
?>

Output:
Enter marks for student 1 (0-100): 95
Student 1 Grade: A
Enter marks for student 2 (0-100): 75
Student 2 Grade: C
Enter marks for student 3 (0-100): 65
Student 3 Grade: D

11. Develop a PHP program to show days of the week using switch cases.

Code:
<?php
echo "Enter a number (1 to 7) to get the day of the week: ";
$day_number = trim(fgets(STDIN));

switch ($day_number) {
    case 1:
        echo "Monday\n";
        break;
    case 2:
        echo "Tuesday\n";
        break;
    case 3:
        echo "Wednesday\n";
        break;
    case 4:
        echo "Thursday\n";
        break;
    case 5:
        echo "Friday\n";
        break;
    case 6:
        echo "Saturday\n";
        break;
    case 7:
        echo "Sunday\n";
        break;
    default:
        echo "Invalid input. Please enter a number between 1 and 7.\n";
        break;
}
?>

Output: 
Enter a number (1 to 7) to get the day of the week: 1
Monday

12. Write a program to check student grade based on marks:
Conditions:
If marks are 75% or more, the grade will be First Class.
If marks between 60% to 74%, grade will be second class.
If marks between 40% to 59%, grade will be third class.
If marks are less than 40%, students will be Fail.

Code:
<?php
echo "Enter student's marks (in percentage): ";
$marks = trim(fgets(STDIN));

if (!is_numeric($marks) || $marks < 0 || $marks > 100) {
    echo "Invalid input. Please enter a number between 0 and 100.\n";
} else {
    if ($marks >= 75) {
        echo "Grade: First Class\n";
    } elseif ($marks >= 60) {
        echo "Grade: Second Class\n";
    } elseif ($marks >= 40) {
        echo "Grade: Third Class\n";
    } else {
        echo "Grade: Fail\n";
    }
}
?>

Output:
Enter student's marks (in percentage): 82
Grade: First Class

15. Create a PHP program to compute the sum of the digits of a number.

Code:
<?php
echo "Enter a number: ";
$number = trim(fgets(STDIN));

$sum = 0;

while ($number > 0) {
    $digit = $number % 10;     
    $sum += $digit;            
    $number = (int)($number / 10);  
}

echo "Sum of digits: $sum\n";
?>

Output:
Enter a number: 54
Sum of digits: 9

16. Write a PHP function that takes two numbers as input and returns the sum of those
numbers. Display the result on the webpage, when a button is clicked.

Code:
<?php
function addNumbers($a, $b) {
    return $a + $b;
}

echo "Enter first number: ";
$num1 = trim(fgets(STDIN));

echo "Enter second number: ";
$num2 = trim(fgets(STDIN));

$sum = addNumbers($num1, $num2);
echo "The sum is: $sum\n";
?>

Output:
Enter first number: 10
Enter second number: 30
The sum is: 40

17. Examine the various control structures in php and construct a bank transaction problem
with customers deposit and withdrawal of amount.

Code:
<?php
$balance = 1000; 

function showMenu() {
    echo "\nChoose an option:\n";
    echo "1. Deposit\n";
    echo "2. Withdraw\n";
    echo "3. Check Balance\n";
    echo "4. Exit\n";
    echo "Enter your choice: ";
}

while (true) {
    showMenu();
    $choice = trim(fgets(STDIN));

    switch ($choice) {
        case 1:
            echo "Enter deposit amount: ";
            $deposit = trim(fgets(STDIN));
            if ($deposit > 0) {
                $balance += $deposit;
                echo "Amount deposited successfully.\n";
            } else {
                echo "Invalid amount!\n";
            }
            break;

        case 2:
            echo "Enter withdrawal amount: ";
            $withdraw = trim(fgets(STDIN));
            if ($withdraw > 0 && $withdraw <= $balance) {
                $balance -= $withdraw;
                echo "Amount withdrawn successfully.\n";
            } else {
                echo "Invalid or insufficient balance!\n";
            }
            break;

        case 3:
            echo "Your current balance is: Rs. $balance\n";
            break;

        case 4:
            echo "Thank you for banking with us!\n";
            exit;

        default:
            echo "Invalid choice! Please enter 1 to 4.\n";
    }
}
?>

Output:
Choose an option:
1. Deposit
2. Withdraw
3. Check Balance
4. Exit
Enter your choice: 3
Your current balance is: Rs. 1000

Choose an option:
1. Deposit
2. Withdraw
3. Check Balance
4. Exit
Enter your choice: 4
Thank you for banking with us!

18. IsSet() function in PHP with example.

Code:
<?php
$name = "Janani";

if (isset($name)) {
    echo "The variable \$name is set and its value is: " . $name;
} else {
    echo "The variable \$name is not set.";
}
?>

Output:
The variable $name is set and its value is: Janani

19. Examine a PHP function that accepts an array of numbers and returns the highest and
lowest values in that array. Display the results on the webpage.

Code:
<?php
function findHighLow($numbers) {
    $highest = max($numbers);
    $lowest = min($numbers);

    echo "Highest number is: " . $highest . "<br>";
    echo "Lowest number is: " . $lowest;
}

$myNumbers = [12, 45, 7, 89, 23, 5, 67];

findHighLow($myNumbers);
?>

Output:
Highest number is: 89<br>Lowest number is: 5

21. Construct a PHP function that checks if a given year is a leap year and returns true or
false accordingly.

Code:
<?php
function isLeapYear($year) {
    if (($year % 4 == 0 && $year % 100 != 0) || ($year % 400 == 0)) {
        return true;
    } else {
        return false;
    }
}

$year = 2024;

if (isLeapYear($year)) {
    echo "$year is a leap year.";
} else {
    echo "$year is not a leap year.";
}
?>

Output:
2024 is a leap year.

22. Create a PHP script that counts the number of occurrences of a specific word in a given
string.

Code:
<?php
$text = "PHP is easy. PHP is powerful. I love PHP!";
$word = "PHP";

$count = substr_count($text, $word);

echo "The word '$word' appears $count times in the string.";
?>

Output:
The word 'PHP' appears 3 times in the string.

23. Prioritize the use of GET and POST arguments in PHP with a real time example.

Code:
<?php
$_GET['color'] = "Blue";
$_POST['name'] = "JANANI";

echo "GET: Your favorite color is " . $_GET['color'] . "\n";
echo "POST: Hello, " . $_POST['name'] . "!";
?>

Output:
GET: Your favorite color is Blue
POST: Hello, JANANI!

24. Write a PHP script to manipulate the strings with all the string functions.

Code:
<?php
$str = "  Hello World! Welcome to PHP.  ";

// Remove extra spaces
$trimmed = trim($str);

// Convert to lowercase and uppercase
$lower = strtolower($trimmed);
$upper = strtoupper($trimmed);

// String length
$length = strlen($trimmed);

// Word count
$wordCount = str_word_count($trimmed);

// Replace a word
$replaced = str_replace("World", "Friend", $trimmed);

// Reverse the string
$reversed = strrev($trimmed);

// Find position of a word
$pos = strpos($trimmed, "PHP");

// Substring
$sub = substr($trimmed, 6, 5);

// Display results neatly
echo "Original: '$str'\n";
echo "Trimmed: '$trimmed'\n";
echo "Lowercase: $lower\n";
echo "Uppercase: $upper\n";
echo "Length: $length\n";
echo "Word count: $wordCount\n";
echo "Replace: $replaced\n";
echo "Reversed: $reversed\n";
echo "Position of 'PHP': $pos\n";
echo "Substring: $sub\n";
?>

Output:
Original: '  Hello World! Welcome to PHP.  '
Trimmed: 'Hello World! Welcome to PHP.'
Lowercase: hello world! welcome to php.
Uppercase: HELLO WORLD! WELCOME TO PHP.
Length: 28
Word count: 5
Replace: Hello Friend! Welcome to PHP.
Reversed: .PHP ot emocleW !dlroW olleH
Position of 'PHP': 24
Substring: World

25. Construct a PHP script to replace the first ‘the’ of the following string with ‘best’. Data:
“The Thing will come to you soon”

Code:
<?php
$text = "The Thing will come to you soon";

$result = preg_replace('/The/', 'Best', $text, 1);

echo $result;
?>

Output:
Best Thing will come to you soon


27. Articulate the mathematical operators with suitable examples in PHP.

Code:
<?php
$a = 12;
$b = 5;

echo "a = $a, b = $b\n";
echo "Addition (+): " . ($a + $b) . "\n";
echo "Subtraction (-): " . ($a - $b) . "\n";
echo "Multiplication (*): " . ($a * $b) . "\n";
echo "Division (/): " . ($a / $b) . "\n";
echo "Modulus (%): " . ($a % $b) . "\n";
echo "Exponentiation (*): " . ($a * $b) . "\n";
?>

Output:
a = 12, b = 5
Addition (+): 17
Subtraction (-): 7
Multiplication (*): 60
Division (/): 2.4
Modulus (%): 2
Exponentiation (*): 60

28. Consider three variables $a, $b, $c, apply var_dump() function to evaluate if the values
are equal or not.

Code:
<?php
$a = 10;
$b = "10";
$c = 15;

var_dump($a == $b); // true (values are equal, types not checked)
var_dump($a === $b); // false (values are same, but types are different)
var_dump($a == $c); // false
var_dump($b == $c); // false
?>

Output:
bool(true)
bool(false)
bool(false)
bool(false)

30. Develop a PHP script that generates a random password consisting of a combination of
letters, numbers, and special characters.

Code:
<?php
function generatePassword($length = 10) {
    $chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()';
    $password = '';

    for ($i = 0; $i < $length; $i++) {
        $randomIndex = rand(0, strlen($chars) - 1);
        $password .= $chars[$randomIndex];
    }

    return $password;
}

echo "Random Password: " . generatePassword();
?>

Output:
Random Password: $XS#V91!DP














